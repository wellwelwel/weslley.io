<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Weslley Ara√∫jo Blog</title>
        <link>https://weslley.io/en/articles/</link>
        <description>Weslley Ara√∫jo Blog</description>
        <lastBuildDate>Mon, 18 Nov 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Preventing malicious emails from being sent through your domain]]></title>
            <link>https://weslley.io/en/articles/2024/11/18/e-mail-spoofing-prevenindo-o-envio-de-emails-atraves-do-seu-dominio/</link>
            <guid>https://weslley.io/en/articles/2024/11/18/e-mail-spoofing-prevenindo-o-envio-de-emails-atraves-do-seu-dominio/</guid>
            <pubDate>Mon, 18 Nov 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Banner]]></description>
            <content:encoded><![CDATA[<div><p><img decoding="async" loading="lazy" alt="Banner" src="https://weslley.io/en/assets/images/banner-306dd9f78004c89cb57b83a11ee27107.png" width="1280" height="720" class="img_ev3q"></p></div>
<p>Did you know that malicious people could be using your domain to send spoof emails?</p>
<!-- -->
<p>Essa t√©cnica √© conhecida como E-mail Spoofing e explora a falta de autentica√ß√£o no envio de e-mails de um dom√≠nio, falsificando o remetente e fazendo parecer que a mensagem foi enviada por um dom√≠nio confi√°vel.</p>
<p>Tanto empresas pequenas e grandes podem ser alvos, assim como sites pessoais ou abandonados, onde o intuito pode variar desde capturar dados sens√≠veis e at√© infectar dispositivos dos usu√°rios. Tudo isso, usando dom√≠nios v√°lidos sem autoriza√ß√£o.</p>
<p>Os motivos podem variar, mas vou citar alguns super comuns que tornam essa vulnerabilidade poss√≠vel:</p>
<ul>
<li>Falta de conhecimento ou at√© mesmo neglig√™ncia.</li>
<li>O provedor do dom√≠nio exige um plano pago √† parte para e-mails que o usu√°rio n√£o est√° disposto a adquirir.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="poss√≠veis-impactos-negativos-">Poss√≠veis impactos negativos üëæ<a href="https://weslley.io/en/articles/2024/11/18/e-mail-spoofing-prevenindo-o-envio-de-emails-atraves-do-seu-dominio/#poss%C3%ADveis-impactos-negativos-" class="hash-link" aria-label="Direct link to Poss√≠veis impactos negativos üëæ" title="Direct link to Poss√≠veis impactos negativos üëæ">‚Äã</a></h2>
<ul>
<li>Perda de credibilidade.</li>
<li>Bloqueio por provedores de e-mail (onde at√© mesmo seus e-mails v√°lidos podem ser afetados ao serem entregues como spam ou nem mesmo chegarem ao destinat√°rio).</li>
<li>Perda do dom√≠nio (den√∫ncias, medidas legais ou at√© mesmo pela reputa√ß√£o muito prejudicada).</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="como-se-proteger-">Como se proteger? ü§ù<a href="https://weslley.io/en/articles/2024/11/18/e-mail-spoofing-prevenindo-o-envio-de-emails-atraves-do-seu-dominio/#como-se-proteger-" class="hash-link" aria-label="Direct link to Como se proteger? ü§ù" title="Direct link to Como se proteger? ü§ù">‚Äã</a></h2>
<p>Nesse artigo, vou abordar t√≥picos como SPF, DKIM e DMARC para proteger seu dom√≠nio e evitar que pessoas maliciosas consigam acesso n√£o autorizado ao seu dom√≠nio.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>Veja tamb√©m como se proteger do lado do usu√°rio final na publica√ß√£o do <a href="https://www.linkedin.com/posts/wellwelwel_j%C3%A1-recebeu-e-mails-falsos-vindos-de-activity-7264430239038992384-skUX/" target="_blank" rel="noopener noreferrer">LinkedIn</a>.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dns">DNS<a href="https://weslley.io/en/articles/2024/11/18/e-mail-spoofing-prevenindo-o-envio-de-emails-atraves-do-seu-dominio/#dns" class="hash-link" aria-label="Direct link to DNS" title="Direct link to DNS">‚Äã</a></h3>
<p>O <strong>DNS</strong> √© onde voc√™ configura os registros relacionados ao seu dom√≠nio, como subdom√≠nios, redirecionamentos, envio e recebimento de e-mails, entre outros.</p>
<p>Ao comprar um dom√≠nio, √© comum usu√°rios se preocuparem especialmente com o IP da hospedagem. Aqui √© onde mora um dos problemas, pois ao notar que o dom√≠nio j√° est√° funcionando, o usu√°rio pode considerar que o trabalho j√° est√° completo.</p>
<p>Dito isso, vamos conhecer os principais registros relacionados ao e-mail:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="mx-mail-exchange">MX (Mail Exchange)<a href="https://weslley.io/en/articles/2024/11/18/e-mail-spoofing-prevenindo-o-envio-de-emails-atraves-do-seu-dominio/#mx-mail-exchange" class="hash-link" aria-label="Direct link to MX (Mail Exchange)" title="Direct link to MX (Mail Exchange)">‚Äã</a></h3>
<p>O registro <strong>MX</strong> √© o respons√°vel por voc√™ receber os e-mails, direcionando-os do seu dom√≠nio para o servidor respons√°vel por receb√™-los (<strong>Google Workspace</strong>, <strong>Zoho</strong>, etc.).</p>
<p>Sem ele, os e-mails que te enviarem nunca chegar√£o at√© voc√™.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="spf">SPF<a href="https://weslley.io/en/articles/2024/11/18/e-mail-spoofing-prevenindo-o-envio-de-emails-atraves-do-seu-dominio/#spf" class="hash-link" aria-label="Direct link to SPF" title="Direct link to SPF">‚Äã</a></h3>
<p>O registro <strong>SPF</strong> √© uma forma de dizer quais servidores est√£o autorizados a enviar e-mails em nome do seu dom√≠nio, ajudando a evitar que pessoas mal intencionadas usem seu dom√≠nio.</p>
<p>Ele √© especialmente importante contra o E-mail Spoofing, sendo geralmente refor√ßado pelo par√¢metro <code>~all</code>.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="dica">Dica:<a href="https://weslley.io/en/articles/2024/11/18/e-mail-spoofing-prevenindo-o-envio-de-emails-atraves-do-seu-dominio/#dica" class="hash-link" aria-label="Direct link to Dica:" title="Direct link to Dica:">‚Äã</a></h4>
<p>Enquanto a maioria dos servidores de e-mail sugerem <code>~all</code> devido √† flexibilidade, se seu dom√≠nio j√° foi v√≠tima de <strong>E-mail Spoofing</strong> ou voc√™ quer refor√ßar ainda mais sua seguran√ßa, voc√™ pode usar <code>-all</code> para eliminar a possibilidade de aceita√ß√£o por baixa prioridade de forma estrita, mas note que isso implica na complexidade das configura√ß√µes do <strong>DNS</strong>, exigindo atualiza√ß√µes manuais sempre que novos servi√ßos de e-mail forem integrados ao seu dom√≠nio.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dkim">DKIM<a href="https://weslley.io/en/articles/2024/11/18/e-mail-spoofing-prevenindo-o-envio-de-emails-atraves-do-seu-dominio/#dkim" class="hash-link" aria-label="Direct link to DKIM" title="Direct link to DKIM">‚Äã</a></h3>
<p>O registro <strong>DKIM</strong> adiciona uma assinatura digital aos e-mails enviados pelo seu dom√≠nio, permitindo que o servidor que recebe o seu e-mail verifique se a mensagem foi realmente enviada por voc√™ e n√£o foi alterada no caminho, sendo uma ferramenta complementar essencial ao <strong>SPF</strong>.</p>
<p>Isso ajuda a proteger tanto a reputa√ß√£o do seu dom√≠nio quanto os destinat√°rios, al√©m de indiretamente evitar que seus e-mails sejam entregues como spam.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dmarc">DMARC<a href="https://weslley.io/en/articles/2024/11/18/e-mail-spoofing-prevenindo-o-envio-de-emails-atraves-do-seu-dominio/#dmarc" class="hash-link" aria-label="Direct link to DMARC" title="Direct link to DMARC">‚Äã</a></h3>
<p>O registro <strong>DMARC</strong> permite que voc√™ defina como os servidores de e-mail devem tratar mensagens que falharem na valida√ß√£o do SPF e do DKIM, fornecendo relat√≥rios detalhados sobre tentativas indevidas usando seu dom√≠nio, permitindo monitorar poss√≠veis abusos.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="solu√ß√µes-e-alternativas-gratuitas-">Solu√ß√µes e alternativas gratuitas üåü<a href="https://weslley.io/en/articles/2024/11/18/e-mail-spoofing-prevenindo-o-envio-de-emails-atraves-do-seu-dominio/#solu%C3%A7%C3%B5es-e-alternativas-gratuitas-" class="hash-link" aria-label="Direct link to Solu√ß√µes e alternativas gratuitas üåü" title="Direct link to Solu√ß√µes e alternativas gratuitas üåü">‚Äã</a></h2>
<p>Se seu provedor n√£o possui um servidor de e-mails ou voc√™ n√£o pretende usar um plano pago para isso, voc√™ pode usar gratuitamente o DNS com o roteamento de e-mails da Cloudflare, redirecionando os e-mails do seu dom√≠nio para outro e-mail (por exemplo, um e-mail pessoal do Gmail).</p>
<p>O Zoho tamb√©m pode ser uma boa alternativa, n√£o sendo necess√°rio redirecionar seus e-mails e oferecendo um dashboard pr√≥prio para os e-mails do seu dom√≠nio, mas ele possui limita√ß√µes de recurso em sua vers√£o gratuita.</p>
<p>‚Äî Curtiu aprender um pouco mais sobre seguran√ßa? üîê</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_BuS1"><p>Esse artigo n√£o possui nenhum tipo de patroc√≠nio e essas s√£o sugest√µes que uso tanto pessoalmente, como profissionalmente üôãüèª</p></div></div>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Esse artigo foi postado icialmente no <a href="https://www.linkedin.com/pulse/e-mail-spoofing-prevenindo-o-envio-de-emails-atrav%25C3%25A9s-do-ara%25C3%25BAjo-ff2xc/" target="_blank" rel="noopener noreferrer">LinkedIn</a>.</p></div></div>]]></content:encoded>
            <category>Security</category>
            <category>DNS</category>
            <category>Intermediary</category>
        </item>
        <item>
            <title><![CDATA[Introducing Unit Testing for Beginner Devs]]></title>
            <link>https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/</link>
            <guid>https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/</guid>
            <pubDate>Fri, 22 Mar 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Banner]]></description>
            <content:encoded><![CDATA[<div><p><img decoding="async" loading="lazy" alt="Banner" src="https://weslley.io/en/assets/images/banner-849b87f5ce44a63ab7614b6c13594dd7.png" width="1280" height="720" class="img_ev3q"></p></div>
<p>If you're a beginner developer (or not), I want to show you that testing can be simple and that complexity only comes according to our own needs.</p>
<!-- -->
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-motiva√ß√£o">üí° Motiva√ß√£o<a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#-motiva%C3%A7%C3%A3o" class="hash-link" aria-label="Direct link to üí° Motiva√ß√£o" title="Direct link to üí° Motiva√ß√£o">‚Äã</a></h2>
<p>Se voc√™ √© um desenvolvedor iniciante (<em>ou n√£o</em>), eu quero te mostrar que testes podem sim ser simples e que a complexidade s√≥ vem conforme nossa pr√≥pria necessidade, n√£o do <em>tester</em>.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-introdu√ß√£o-ao-mundo-dos-testes">üßëüèª‚Äçüéì Introdu√ß√£o ao Mundo dos Testes<a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#-introdu%C3%A7%C3%A3o-ao-mundo-dos-testes" class="hash-link" aria-label="Direct link to üßëüèª‚Äçüéì Introdu√ß√£o ao Mundo dos Testes" title="Direct link to üßëüèª‚Äçüéì Introdu√ß√£o ao Mundo dos Testes">‚Äã</a></h2>
<p>Imagine um sistema onde v√°rios usu√°rios tiveram a conta invadida porque criaram senhas como "<code>1234</code>" e o sistema permitia, mesmo tendo uma valida√ß√£o para isso, mas sem garantia nenhuma que essa fun√ß√£o estava realmente funcionando ü•≤</p>
<p>Isso facilmente seria evitado se existissem testes garantindo que a fun√ß√£o que valida a senha funcionasse como deveria sempre que uma modifica√ß√£o √© feita no sistema, concorda? üîê</p>
<p>Mas quando um dev iniciante procura por <strong>testes automatizados</strong>, isso pode parecer (<em>ou at√© <strong>ser</strong></em>) complexo:</p>
<ul>
<li>Os <em><strong>testers</strong></em> podem exigir configura√ß√µes de ambiente (especialmente quando se trata de <strong>ESM</strong> e <strong>TypeScript</strong>)</li>
<li>Podem mudar o comportamento do ambiente de desenvolvimento</li>
<li>Podem exigir que voc√™ adapte seu c√≥digo para funcionar com eles</li>
<li>E at√© que voc√™ tenha um conhecimento previamente aprofundado sobre eles (documenta√ß√£o) para simplesmente iniciar</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-escolhendo-o-tester">üìö Escolhendo o <em>Tester</em><a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#-escolhendo-o-tester" class="hash-link" aria-label="Direct link to -escolhendo-o-tester" title="Direct link to -escolhendo-o-tester">‚Äã</a></h2>
<p>Atualmente, existem muitos testers, alguns focados em boas pr√°ticas, outros focados na produtividade, performance e por a√≠ vai.</p>
<p>Alguns dos mais populares:</p>
<ul>
<li><strong>Jest</strong></li>
<li><strong>Mocha</strong> + <strong>Chai</strong></li>
<li><strong>Vitest</strong></li>
</ul>
<p>Para esse tutorial, vamos usar um <em>tester</em> que eu criei (<a href="https://github.com/wellwelwel/poku" target="_blank" rel="noopener noreferrer"><strong>Poku</strong></a>), devido sua simplicidade, mas voc√™ pode usar qualquer um üöÄ</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-instalando-nosso-tester">üì¶ Instalando nosso <strong><em>Tester</em></strong><a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#-instalando-nosso-tester" class="hash-link" aria-label="Direct link to -instalando-nosso-tester" title="Direct link to -instalando-nosso-tester">‚Äã</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">npm</span><span class="token plain"> i </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-D</span><span class="token plain"> poku</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-por-que-unit√°rios">üß™ Por que "Unit√°rios"?<a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#-por-que-unit%C3%A1rios" class="hash-link" aria-label="Direct link to üß™ Por que &quot;Unit√°rios&quot;?" title="Direct link to üß™ Por que &quot;Unit√°rios&quot;?">‚Äã</a></h2>
<p>Ao desenvolvermos nossos c√≥digos, √© comum dividirmos tarefas pequenas em fun√ß√µes menores, ent√£o exportamos essas fun√ß√µes para us√°-las em v√°rios lugares no nosso c√≥digo, certo?</p>
<p>Criar os <strong>testes unit√°rios</strong> garante que essas <em>"fun√ß√µes unit√°rias"</em> sempre funcionem como esperado üßôüèª</p>
<blockquote>
<p>Se essa postagem for <strong>positiva</strong>, eu tamb√©m gostaria de fazer um tutorial igualmente simples para <strong>testes de integra√ß√£o</strong> e <strong>e2e</strong>, focados para desenvolvedores iniciantes ü§ù</p>
</blockquote>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-criando-um-projeto-simples">üìã Criando um Projeto Simples<a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#-criando-um-projeto-simples" class="hash-link" aria-label="Direct link to üìã Criando um Projeto Simples" title="Direct link to üìã Criando um Projeto Simples">‚Äã</a></h2>
<p>Vamos elaborar um projeto bem simples, onde iremos apenas validar uma senha.
Nosso projeto precisa validar se a senha passada:</p>
<ul>
<li>‚úÖ √â uma string</li>
<li>‚úÖ Possui ao menos oito caract√©res</li>
<li>‚úÖ Possui ao menos uma letra mai√∫scula</li>
<li>‚úÖ Possui ao menos uma letra min√∫scula</li>
<li>‚úÖ Possui ao menos um n√∫mero</li>
</ul>
<p>Se a senha for v√°lida, devemos retornar <code>true</code>, caso contr√°rio, <code>false</code>.</p>
<p>Para isso, iremos criar o arquivo:</p>
<ul>
<li><strong>src/validations.mjs</strong></li>
</ul>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(80, 250, 123)">validatePassword</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">password</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// Verifica se a senha √© uma string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">typeof</span><span class="token plain"> password </span><span class="token operator">!==</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'string'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// Verifica se a senha possui 8 caract√©res ou mais</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">password</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">trim</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">length </span><span class="token operator">&lt;</span><span class="token plain"> </span><span class="token number">8</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// Verifica se a senha possui ao menos uma letra mai√∫scula</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">!</span><span class="token regex regex-delimiter">/</span><span class="token regex regex-source language-regex char-class char-class-punctuation punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token regex regex-source language-regex char-class range">A</span><span class="token regex regex-source language-regex char-class range range-punctuation operator">-</span><span class="token regex regex-source language-regex char-class range">Z</span><span class="token regex regex-source language-regex char-class char-class-punctuation punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token regex regex-delimiter">/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">test</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">password</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// Verifica se a senha possui ao menos uma letra min√∫scula</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">!</span><span class="token regex regex-delimiter">/</span><span class="token regex regex-source language-regex char-class char-class-punctuation punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token regex regex-source language-regex char-class range">a</span><span class="token regex regex-source language-regex char-class range range-punctuation operator">-</span><span class="token regex regex-source language-regex char-class range">z</span><span class="token regex regex-source language-regex char-class char-class-punctuation punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token regex regex-delimiter">/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">test</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">password</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// Verifica se a senha possui ao menos um n√∫mero</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">!</span><span class="token regex regex-delimiter">/</span><span class="token regex regex-source language-regex char-class char-class-punctuation punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token regex regex-source language-regex char-class range">0</span><span class="token regex regex-source language-regex char-class range range-punctuation operator">-</span><span class="token regex regex-source language-regex char-class range">9</span><span class="token regex regex-source language-regex char-class char-class-punctuation punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token regex regex-delimiter">/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">test</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">password</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// Retorna verdadeiro se todas as valida√ß√µes acima passarem</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre></div></div>
<blockquote>
<p>Visando manter o exemplo simples, n√£o vamos ir muito al√©m disso üßôüèª</p>
</blockquote>
<ul>
<li>N√£o use essa fun√ß√£o para c√≥digos reais, o intuito √© ser simples para focar no apredizado üßëüèª‚Äçüéì</li>
<li>Voc√™ pode trocar de <strong>src/validations.mjs</strong> para <strong>src/validations.js</strong> usando o <code>"type": "module"</code> no seu arquivo <strong>package.json</strong> üßôüèª</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-entendendo-os-testes">üßëüèª‚Äçüî¨ Entendendo os Testes<a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#-entendendo-os-testes" class="hash-link" aria-label="Direct link to üßëüèª‚Äçüî¨ Entendendo os Testes" title="Direct link to üßëüèª‚Äçüî¨ Entendendo os Testes">‚Äã</a></h2>
<p>Teoricamente, nossa fun√ß√£o do projeto j√° funciona, esse √© o momento que a gente come√ßa fazer v√°rios <code>console.log</code>, certo? <strong>Nada disso</strong> üòÇ</p>
<p>Vamos tornar o que seriam esses <em>"console logs"</em>, em testes automatizados que sempre ser√£o executados quando o projeto passar por uma altera√ß√£o üöÄ</p>
<p>Como? Usando asser√ß√µes üëáüèª</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="Ô∏è-o-que-s√£o-asser√ß√µes">‚òëÔ∏è O que s√£o Asser√ß√µes?<a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#%EF%B8%8F-o-que-s%C3%A3o-asser%C3%A7%C3%B5es" class="hash-link" aria-label="Direct link to ‚òëÔ∏è O que s√£o Asser√ß√µes?" title="Direct link to ‚òëÔ∏è O que s√£o Asser√ß√µes?">‚Äã</a></h3>
<p>Nos testes, <strong>asser√ß√µes</strong> s√£o usadas para garantir que um resultado √© realmente o que a gente espera.</p>
<p>Cada <em>tester</em> pode ter uma forma diferente de fazer isso, mas o final costuma ser o mesmo:</p>
<ul>
<li>Se nossa verifica√ß√£o (asser√ß√£o) n√£o for exatamente como o esperado, o teste ir√° disparar um erro nessa asser√ß√£o.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="-exemplo">üìù Exemplo:<a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#-exemplo" class="hash-link" aria-label="Direct link to üìù Exemplo:" title="Direct link to üìù Exemplo:">‚Äã</a></h4>
<p>Imagine que <code>1 + 1</code> precisa retornar <code>2</code>, mas retornou <code>"11"</code>.</p>
<p>Quando chegar na asser√ß√£o que espera o resultado <code>2</code>, ela ir√° disparar um erro no teste dizendo que esperava <code>2</code> (n√∫mero), mas recebeu <code>"11"</code> (<em>string</em>):</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports"> assert </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'poku'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">assert</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">strictEqual</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'1'</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'1+1 deve retornar 2'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre></div></div>
<img loading="lazy" width="474" alt="Erro de asser√ß√£o" src="https://github.com/wellwelwel/poku/assets/46850407/f1dc1e18-7f9b-4ccb-880c-b0845464925f">
<ul>
<li><code>actual</code>:<!-- -->
<ul>
<li><em>"11"</em> ‚Äî √â o retorno din√¢mico (<em>soft code</em>) da nossa fun√ß√£o ou vari√°vel</li>
</ul>
</li>
<li><code>expected</code>:<!-- -->
<ul>
<li><em>2</em> ‚Äî √© o valor bruto (<em>hard code</em>) que deve ser retornado pelo <code>actual</code></li>
</ul>
</li>
</ul>
<blockquote>
<p>Tanto o <a href="https://github.com/wellwelwel/poku" target="_blank" rel="noopener noreferrer"><strong>Poku</strong></a> como o pr√≥prio <strong>Node.js</strong> possuem o m√©todo <code>assert</code> com a forma de uso exatamente iguais üßôüèª</p>
<p>Quanto ao funcionamento, o <a href="https://github.com/wellwelwel/poku" target="_blank" rel="noopener noreferrer"><strong>Poku</strong></a> oferece uma forma simples e inteligente de executar m√∫ltiplos arquivos e descreve todas as asser√ß√µes que passaram ou n√£o no terminal üê∑</p>
</blockquote>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="-corrigindo-nosso-exemplo">üìù Corrigindo nosso exemplo:<a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#-corrigindo-nosso-exemplo" class="hash-link" aria-label="Direct link to üìù Corrigindo nosso exemplo:" title="Direct link to üìù Corrigindo nosso exemplo:">‚Äã</a></h4>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports"> assert </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'poku'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">assert</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">strictEqual</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'1+1 deve retornar 2'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre></div></div>
<img loading="lazy" width="474" alt="Asser√ß√£o com sucesso" src="https://github.com/wellwelwel/poku/assets/46850407/430a72eb-8d34-45f4-abc7-2f2f92e3dd8e">
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-criando-os-testes">üß™ Criando os Testes<a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#-criando-os-testes" class="hash-link" aria-label="Direct link to üß™ Criando os Testes" title="Direct link to üß™ Criando os Testes">‚Äã</a></h2>
<blockquote>
<p>Finalmente a parte boa üéâ</p>
</blockquote>
<p>Para isso, vamos usar a criatividade e gerar:</p>
<ul>
<li>‚ùå V√°rias senhas inv√°lidas para simular o comportamento tanto de usu√°rios usuais, como de usu√°rios mal intencionados<!-- -->
<ul>
<li>Nas senhas inv√°lidas, n√≥s esperamos (<code>expected</code>) que o resultado (<code>actual</code>) seja <code>false</code>.</li>
</ul>
</li>
<li>‚úÖ Senhas v√°lidas para garantir que nossa fun√ß√£o entende que a senha deve ser v√°lida quando passar por todos os crit√©rios<!-- -->
<ul>
<li>Nas senhas v√°lidas, n√≥s esperamos (<code>expected</code>) que o resultado (<code>actual</code>) seja <code>true</code>.</li>
</ul>
</li>
<li>üìù Nada de coment√°rios no teste, vamos descrever o que √© cada um na pr√≥pria asser√ß√£o (<code>message</code>)</li>
</ul>
<p>Vamos criar nosso arquivo de teste:</p>
<ul>
<li><strong>test/password.test.mjs</strong></li>
</ul>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports"> assert </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'poku'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports"> validatePassword </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'../src/validations.mjs'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">assert</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">strictEqual</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token function" style="color:rgb(80, 250, 123)">validatePassword</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">'Valida se a senha n√£o for passada'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">assert</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">strictEqual</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token function" style="color:rgb(80, 250, 123)">validatePassword</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">12345678</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">'Valida se a senha n√£o for uma string'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">assert</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">strictEqual</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token function" style="color:rgb(80, 250, 123)">validatePassword</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">''</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">'Valida se a senha for uma string vazia'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">assert</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">strictEqual</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token function" style="color:rgb(80, 250, 123)">validatePassword</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'abcd1234'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">'Valida se a senha n√£o possuir ao menos uma letra mai√∫scula'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">assert</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">strictEqual</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token function" style="color:rgb(80, 250, 123)">validatePassword</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'1234EFGH'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">'Valida se a senha n√£o possuir ao menos uma letra min√∫scula'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">assert</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">strictEqual</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token function" style="color:rgb(80, 250, 123)">validatePassword</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'abcdEFGH'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">'Valida se a senha n√£o possuir ao menos um n√∫mero'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">assert</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">strictEqual</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token function" style="color:rgb(80, 250, 123)">validatePassword</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'abcdEF12'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">'Valida se a senha for v√°lida'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre></div></div>
<ul>
<li>Voc√™ pode trocar de <strong>test/password.test.mjs</strong> para <strong>test/password.test.js</strong> usando o <code>"type": "module"</code> no seu arquivo <strong>package.json</strong> üßôüèª</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-verificando-se-os-testes-passaram">üî¨ Verificando se os Testes Passaram<a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#-verificando-se-os-testes-passaram" class="hash-link" aria-label="Direct link to üî¨ Verificando se os Testes Passaram" title="Direct link to üî¨ Verificando se os Testes Passaram">‚Äã</a></h2>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">npx poku</span><br></span></code></pre></div></div>
<ul>
<li>Ao executar o comando <code>npx poku</code>, por padr√£o, o <em>tester</em> ir√° procurar por todos os arquivos com a exten√ß√£o <code>*.test.*</code> ou <code>*.spec.*</code> no diret√≥rio em que o comando foi executado üßôüèª</li>
</ul>
<p>E finalmente, nosso resultado:</p>
<img loading="lazy" width="522" alt="Exemplo de Sucesso com o Poku" src="https://github.com/wellwelwel/poku/assets/46850407/f06105a3-f956-473f-b456-26c1e27d80db">
<ul>
<li>A primeira sa√≠da mostra em qual diret√≥rio o <a href="https://github.com/wellwelwel/poku" target="_blank" rel="noopener noreferrer"><strong>Poku</strong></a> est√° procurando por testes</li>
<li>A segunda sa√≠da mostra o arquivo que est√° sendo testado no momento<!-- -->
<ul>
<li>Dentro de cada arquivo de teste, ele ir√° mostrar todas as asser√ß√µes que possu√≠rem uma mensagem</li>
<li>Ao finalizar, seja com sucesso ou erro, ele ir√° mostrar o comando que ele executou para o arquivo testado:<!-- -->
<ul>
<li><code>node test/password.test.mjs</code></li>
</ul>
</li>
</ul>
</li>
<li>Quando todos os arquivos de testes terminarem, ele ir√° mostrar um resumo de quantos arquivos passaram e/ou falharam</li>
<li>No final, o c√≥digo de sa√≠da ser√°:<!-- -->
<ul>
<li>‚úÖ <code>0</code> para sucesso</li>
<li>‚ùå <code>1</code> para falha</li>
</ul>
</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-conclus√£o">üí≠ Conclus√£o<a href="https://weslley.io/en/articles/2024/03/22/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes/#-conclus%C3%A3o" class="hash-link" aria-label="Direct link to üí≠ Conclus√£o" title="Direct link to üí≠ Conclus√£o">‚Äã</a></h2>
<p>Com os <strong>testes unit√°rios</strong> que criamos, n√≥s garantimos n√£o s√≥ que nossa fun√ß√£o funcione como deveria, como inclusive prevemos como nosso projeto reage em situa√ß√µes at√≠picas antes que elas aconte√ßam üîê</p>
<blockquote>
<p>Espero ter te provado que <strong>testes</strong> podem sim (!) ser <strong>simples</strong> üßëüèª‚Äçüéì</p>
</blockquote>
<hr>
<ul>
<li>Essa foi minha primeira "aula" em formato de <em>blog</em>. Feedbacks s√£o sempre bem vindos ü©µ</li>
<li>Muitos termos s√£o explicados repetidamente em momentos diferentes, isso √© uma escolha did√°tica, mas podem falar caso tenha ficado cansativo üßëüèª‚Äçüéì</li>
</ul>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Esse artigo foi postado icialmente no <a href="https://www.tabnews.com.br/wellwelwel/tutorial-introduzindo-testes-unitarios-para-devs-iniciantes-js" target="_blank" rel="noopener noreferrer">TabNews</a>.</p></div></div>]]></content:encoded>
            <category>Tests</category>
            <category>JavaScript</category>
            <category>Beginner</category>
        </item>
    </channel>
</rss>